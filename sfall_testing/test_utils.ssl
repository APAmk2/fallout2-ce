#include "define_lite.h"

#ifndef assertEquals

variable test_suite_errors := 0;
variable test_suite_verbose := false;

procedure assertEquals(variable desc, variable a, variable b) begin
   if (a != b or typeof(a) != typeof(b)) then begin
      display_msg("Assertion failed \""+desc+"\": "+a+" != "+b);
      test_suite_errors ++;
   end else if (test_suite_verbose) then begin
      display_msg("Assert \""+desc+"\" ok");
   end
end

procedure assertNotEquals(variable desc, variable a, variable b) begin
   if (a == b) then begin
      display_msg("Assertion failed \""+desc+"\": "+a+" == "+b);
      test_suite_errors ++;
   end else if (test_suite_verbose) then begin
      display_msg("Assert \""+desc+"\" ok");
   end
end

procedure report_test_results(variable desc) begin
    display_msg("Done " + test_suite_errors + " errors");
    if (test_suite_errors == 0) then begin
        float_msg(dude_obj, "Stats tests passed!", FLOAT_MSG_GREEN);
    end else begin
        float_msg(dude_obj, "Stats " + test_suite_errors + " tests failed", FLOAT_MSG_RED);
    end
end

#endif
