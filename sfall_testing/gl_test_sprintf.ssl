#include "test_utils.ssl"

#define REPEAT_64 "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
#define REPEAT_512 REPEAT_64 REPEAT_64 REPEAT_64 REPEAT_64 REPEAT_64 REPEAT_64 REPEAT_64 REPEAT_64
#define REPEAT_1024 REPEAT_512 REPEAT_512

procedure start begin

    display_msg("Testing sprintf...");

    call assertEquals("sprintf hello world", sprintf("Hello %s", "World"), "Hello World");

    call assertEquals("sprintf empty string", sprintf("", 123), "");

    call assertEquals("sprintf number string", sprintf("Hello%d!", 123), "Hello123!");

    // This gives weird results in sFall
    // call assertEquals("sprintf float string", sprintf("Hello%d!", 3.4), "Hello"+3.4+"!");

    // This is not a float!
    call assertEquals("sprintf float string", sprintf("Hello%d!", 10/4), "Hello2!");

    call assertEquals("sprintf two strings", sprintf("Hello %s %s", "World"), "Hello World World");

    call assertEquals("Long string", sprintf(REPEAT_1024"x", 1), "Error");

    call assertEquals("Not so long", sprintf(REPEAT_1024, 1), REPEAT_1024);

    call report_test_results("sprintf");
end